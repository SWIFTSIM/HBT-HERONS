# Example configuration file listing all possible options. If applicable,
# default values are provided. NOTE: Parameters are case sensitive, and anything
# after a hash or square brackets is ignored.

[================================== FILE PATHS ================================]

# Path to the files containing the particle information. They should contain
# their coordinates velocities and masses. If thermal unbinding is enabled, the
# thermal energy of gas is also required.
SnapshotPath

# Path to the files containing information used to reconstruct the FoF group
# membership of particles.
HaloPath

# Base name for the snapshot files, e.g. <SnapshotFileBase>_<snap_nr>.
SnapshotFileBase

# Base name for the directories where snapshot subfiles are saved, if
# applicable. For example,
# <SnapshotDirBase>_<snap_nr>/<SnapshotFileBase>_<snap_nr>.<subfile_nr>. If
# there is only one file per snapshot, omit this option.
SnapshotDirBase

# Base directory of where the HBT catalogues will be saved. The HBT catalogue
# for each snapshot is saved in its own subdirectory, with the number of
# subfiles matching the number of MPI ranks.
SubhaloPath

# The minimum and maximum snapshot number of the simulation being analysed. If
# 10 snapshots exist, and they are 0-indexed, the values would correspond to 0
# and 9, respectively.
MinSnapshotIndex 0
MaxSnapshotIndex

# Which subset of snapshots to analyse, if applicable. For example, if we only
# want to analyse every second snapshot of a ten snapshot run: 1 3 5 7 9.
SnapshotIdList

[=================================== FILE IO ==================================]

# The format used by files containing the particle information.
SnapshotFormat

# The format used by the files containing the FoF memberships of particles.
GroupFileFormat

# The value in the FoF particle membership catalogue that corresponds to
# belonging to no FoF group.
ParticleNullGroupId

# If particles split in the simulation, in which case their splitting history
# needs to be provided. This is only implemented for SWIFT hydrodynamical 
# simulations.
ParticlesSplit

# If the position, velocity, mass and type of particles should be saved
# alongside the subhalo catalogues. If thermal unbinding is enabled, it is also
# saved. This information is only provided for particles that are bound to a
# subhalo.
SaveBoundParticleProperties 0

# If the internally calculated binding energies of particles should be saved
# alongside the subhalo catalogues. This is only provided for particles that are
# bound to a subhalo.
SaveBoundParticleBindingEnergies 0

# If the potential energies of particles should be saved alongside the subhalo
# catalogues. This is only provided for particles that are bound to a subhalo.
SaveBoundParticlePotentialEnergies 0

[==================================== UNITS ===================================]

# What units should be used. They should always be provided, either through
# these configuration paramters, or even better, directly loaded from the
# snapshot metadata.
MassInMsunh  -1
LengthInMpch -1
VelInKmS     -1

[================================ SIMULATION BOX ==============================]

# Whether to use periodic boundary conditions.
PeriodicBoundaryOn 1

# Side length of each side of the box. Note that only cubes are currently
# supported.
BoxSize -1

[=========================== GRAVITATIONAL SOFTENING ==========================]

# The comoving softening length of dark matter particles.
SofteningHalo -1

# The maximum physical softening length of dark matter particles.
MaxPhysicalSofteningHalo -1

[================================= GRAVITY TREE ===============================]

# Geometric criteria to determine whether a tree node should be opened or can be
# used as is.
TreeNodeOpenAngle 0.45

# The maximum number of cells used in the gravity tree, relative to the number
# of particles.
TreeAllocFactor 0.8

# Minimum number of tree cells to use.
TreeMinNumOfCells 10

[============================== SUBHALO UNBINDING =============================]

# Convergence threshold of the fractional difference in the number of bound
# particles between unbinding iterations.
BoundMassPrecision 0.995

# How many particles a subhalo can have associated to its source subhalo,
# relative to its number of bound particles.
SourceSubRelaxFactor 3

# Maximum number of particles used to estimate the gravitational potential of
# particles. If the subhalo has more than this value, a randomly selected
# MaxSampleSizeOfPotentialEstimate particles are used as gravity sources.
MaxSampleSizeOfPotentialEstimate 1000

# Particle types which will never be subsampled during unbinding. The option is
# provided for situations where particles can have a large mass difference 
# relative to all other particles (e.g. black holes) or if the spatial 
# distribution is significantly different (e.g. stars). Particle types left 
# unspecified can be subsampled if the subhalo is large enough.
DoNotSubsampleParticleTypes 5

# The manner in which the masses of subsampled particles are scaled to conserve
# mass. A value of 0 applies a single mass upscale factor regardless of particle
# type, which means that total mass is conserved but not the relative mass 
# contributions of each subsampled particle type. A value of 1 applies an upscale
# factor to each particle type independently, so that the total mass of each  
# particle type is (APPROXIMATELY) conserved in the subsampled set. Mass conservation
# of a given particle type will not be possible if said type is missing from the
# subsampled set
PotentialEstimateUpscaleMassesPerType 1

# If the self-binding energy of the most bound subset of particles should be
# computed after unbinding the subhalo. This step is done to better identify the
# most bound particle if potential subsampling was enabled. Not enabling this
# could make HBT incorrectly identify which particle is the most bound.
RefineMostBoundParticle 1

# Fraction of the most bound particles whose self-binding energies are computed
# to better estimate the most bound particle. The actual value is
# max(MaxSampleSizeOfPotentialEstimate, BoundFractionCenterRefinement * Nbound).
BoundFractionCenterRefinement 0.1

[=============================== SUBHALO TRACKING =============================]

# Particle types that can be used as subhalo tracers. Tracers are used to
# identify which FoF group hosts a given subhalo, the offsets in phase-space
# between subhaloes, and the position/velocity of orphan (disrupted) subhaloes.
# We recommend using time-persistent, collisionless particles (e.g. DM & stars).
TracerParticleTypes 1 4

# Minimum number of bound particles required for a subhalo to be resolved,
# regardless of their particle type.
MinNumPartOfSub 20

# Minimum number of bound tracer particles required for a subhalo to be
# resolved. Since tracers are used to trace subhaloes, at least one should be
# present.
MinNumTracerPartOfSub 10

# How many tracer particles are used to identify the host FoF group of
# subhaloes. The weighting of each particle reflects their binding energy
# ordering in the previous output.
NumTracerHostFinding 10

# How many tracer particles are used to identify which subhalo has accreted the
# core of subhaloes that have disrupted in the current snapshot.
NumTracersForDescendants 10

# Whether to manually merge resolved subhaloes that overlap in phase-space.
# Recommended to always leave on.
MergeTrappedSubhalos 1

# The threshold used to identify which subhaloes are central candidates within a
# FoF. Expressed relative to the most massive subhalo in said host FoF group.
MajorProgenitorMassRatio 0.8

# Keeping here as a reference as it is defined, but it is not used internally at
# the moment. It will be good to add as an additional option when computing the
# phase-space distance between overlapping subhaloes. The current behaviour is
# equivalent to SubCoreSizeMin = 10 and SubCoreSizeFactor=0.
# SubCoreSizeMin 20
# SubCoreSizeFactor 0.25

[================================ MISCELLANEOUS ===============================]

# Whether particles are already sorted by Particle IDs, and hence no ParticleID
# dataset is specified within the snapshot file.
SnapshotHasIdBlock 1

# Whether to create a hash map to retrieve particle properties given an ID.
ParticleIdNeedHash 1

# Hexadecimal mask indicating which digits of the particle IDs are significant.
# For example, if only the first 4 digits are required (i.e. "1111" in binary),
# then this would correspond to "F". Only required for peculiar Gadget formats.
GroupParticleIdMask

# If the particle IDs are saved as an unsigned integer.
SnapshotIdUnsigned
